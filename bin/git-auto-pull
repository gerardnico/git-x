#!/bin/bash
# @name git-auto-pull



set -Eeuo pipefail
# shellcheck source=../..//bash-lib/lib/bashlib-error.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-error.sh"
error::set_trap
# shellcheck source=../..//bash-lib/lib/bashlib-echo.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-echo.sh"
# shellcheck source=../..//bash-lib/lib/bashlib-git.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-git.sh"
# shellcheck source=../..//bash-lib/lib/bashlib-path.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-path.sh"
# shellcheck source=../..//bash-lib/lib/bashlib-doc.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-doc.sh"

# Synopsis
function synopsis(){

  cat <<EOF
Easy AutoPull
\`\`\`bash
$(basename "$0")
\`\`\`
EOF

}

# Doc Synopsis
if [ "${1:-}" = "synopsis" ]; then
  synopsis
  exit 0
fi

# Help
if [[ "${1:-}" =~ -h|--help|help ]]; then
  doc::help synopsis
  exit 0
fi


DIRECTORY_NAME=$(path::get_current_directory_name)

# Stash before a merge to integrate the remote changes
# To avoid the error: Please commit your changes or stash them before you merge.
#
# Note that when the local changes do not conflict with the changes in the upstream,
# a simple git pull let you move forward but how do we know that ?
#
STASH=0
if git::is_dirty; then
  echo::info "$DIRECTORY_NAME - Working area dirty"
  STASH=1
else
  echo::info "$DIRECTORY_NAME - Working area not dirty"
fi

if [ "$STASH" = "1" ]; then
  echo::info "$DIRECTORY_NAME - Stashing the files $(git::get_dirty_files)"
  git stash
fi

echo::info "$DIRECTORY_NAME - Pulling"
git pull

if [ "$STASH" = "1" ]; then
  echo::info "$DIRECTORY_NAME - UnStashing"
  git stash pop # do a merge
fi
